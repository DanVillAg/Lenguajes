#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 941 0 28 3 10 #"#lang plai"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 4 #"file"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"./grammars.rkt\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 4 #"file"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"./parser.rkt\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Busca el identificador \"name\" en el cach\303\251 de "
0 0 24 29 1 #"\n"
0 0 17 3 56
#";; sustituci\303\263n \"ds\" regresando el valor correspondiente"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; o informando un error si no lo encuentra."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; lookup: symbol DefrdSub -> CFWAE"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (define (lookup name ds)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 8 #"DefrdSub"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"mtSub"
0 0 24 3 4 #"() ("
0 0 14 3 5 #"error"
0 0 21 3 1 #"'"
0 0 24 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Variable No Ligada >:("
0 0 19 3 1 #"\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"aSub"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bound-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"bound-value"
0 0 24 3 1 #" "
0 0 14 3 8 #"rest-env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 10 #"bound-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 11 #"bound-value"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 8 #"rest-env"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";Ejemplo De Uso:"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"lookup"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"z"
0 0 17 3 2 #" ("
0 0 17 3 4 #"aSub"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"z"
0 0 17 3 2 #" ("
0 0 17 3 3 #"num"
0 0 17 3 1 #" "
0 0 17 3 12 #"9) (mtSub)))"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";(lookup 'z (mtSub))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(4
 #";; Toma un \303\241rbol de sint\303\241xis abstraca del lenguaje CFW"
 #"AE, un cach\303\251 de"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(5
 #";; sustituciones y lo interpreta dependiendo de las definiciones den"
 #"tro del cach\303\251,"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";; devolviendo"
0 0 17 3 1 #" "
0 0 17 3 35 #"el valor num\303\251rico correspondiente."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; interp: CFWAE DefrdSub-> number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 5 #"CFWAE"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"if0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"condicion"
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 9 #"condicion"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 2 #"op"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))] "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 6 #"aux-op"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 5 #")))] "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))]   "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 6 #"aux-op"
0 0 24 3 1 #" "
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"ds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          )]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"with"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-params"
0 0 24 3 1 #" "
0 0 14 3 4 #"bind"
0 0 24 3 2 #") "
0 0 14 3 4 #"body"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"get-args"
0 0 24 3 1 #" "
0 0 14 3 4 #"bind"
0 0 24 3 3 #")) "
0 0 14 3 2 #"ds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"with*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 6 #"params"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"app"
0 0 24 3 2 #" ("
0 0 14 3 3 #"foo"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 12 #"closure-body"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"foo"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 5 #" )) ("
0 0 14 3 7 #"aux-env"
0 0 24 3 2 #" ("
0 0 14 3 13 #"closure-param"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"foo"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 3 #")) "
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 11 #"closure-env"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"foo"
0 0 24 3 1 #" "
0 0 14 3 2 #"ds"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(6
 #";Esta funcion obtiene los parametros de with para la aplicacion de l"
 #"a funcion"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-params"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"m"
0 0 14 3 2 #"ap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 3 #") ("
0 0 14 3 10 #"binding-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"bind"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 17 3 77
(7
 #";Esta funcion obtiene los argumentos de with para la aplicacion de l"
 #"a funcion"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-args"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 3 #") ("
0 0 14 3 13 #"binding-value"
0 0 24 3 1 #" "
0 0 14 3 4 #"bind"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";Ejemplo de uso de la aplicacion de funcion"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 3 #"app"
0 0 17 3 2 #" {"
0 0 17 3 3 #"fun"
0 0 17 3 2 #" {"
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 1 #" "
0 0 17 3 1 #"z"
0 0 17 3 3 #"} {"
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 1 #" "
0 0 17 3 1 #"z"
0 0 17 3 4 #"}} {"
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 6 #"} }) ("
0 0 17 3 7 #"mtSub))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";Ejemplos de guia:"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"closure-body"
0 0 17 3 2 #" ("
0 0 17 3 6 #"interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 3 #"fun"
0 0 17 3 2 #" {"
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 4 #" } {"
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 13 #"}}) (mtSub)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"closure-param"
0 0 17 3 2 #" ("
0 0 17 3 6 #"interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 2 #" '"
0 0 17 3 1 #"{"
0 0 17 3 3 #"fun"
0 0 17 3 2 #" {"
0 0 17 3 1 #"x"
0 0 17 3 6 #" y } {"
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 13 #"}}) (mtSub)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"closure-env ("
0 0 17 3 6 #"interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 3 #" '{"
0 0 17 3 5 #"fun {"
0 0 17 3 1 #"x"
0 0 17 3 2 #" y"
0 0 17 3 4 #" } {"
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 13 #"}}) (mtSub)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 130
(8
 #";Esta funcion crea el nuevo ambiente con los parametros de la funcio"
 #"n y la lista de argumentos que recibe la aplicacion de funcion"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#"; aux-env:  (list of symbol) (listof CFWAE) DefrdSub -> DefrdSub"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"aux-env"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"aux-env"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #") ("
0 0 14 3 4 #"aSub"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Funcion para arreglar unas operaciones truculentas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"aux-op"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 2 #"op"
0 0 24 3 2 #" ("
0 0 14 3 6 #"aux-op"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 13 #"interp (parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 4 #"with"
0 0 17 3 4 #" ([x"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #"] ["
0 0 17 3 1 #"y"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 4 #"]) ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 18 #" (- y))}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";-6"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #";("
0 0 17 3 6 #"interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 9 #"{with ([x"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 4 #"] [y"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 5 #"]) ( "
0 0 17 3 1 #"+"
0 0 17 3 16 #" x y)}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";5"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;(parse '{"
0 0 17 3 4 #"with"
0 0 17 3 3 #" (["
0 0 17 3 1 #"x"
0 0 17 3 5 #" 2] ["
0 0 17 3 1 #"y"
0 0 17 3 2 #" 3"
0 0 17 3 5 #"]) ( "
0 0 17 3 1 #"+"
0 0 17 3 7 #" x y)})"
0 0 24 29 1 #"\n"
0 0 17 3 99
(9
 #";(with (list (binding 'x (num 2)) (binding 'y (num 3))) (op #<proced"
 #"ure:+> (list (id 'x) (id 'y))))"
) 0 0 24 29 1 #"\n"
0 0 17 3 8 #";;(parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 4 #"with"
0 0 17 3 3 #" (["
0 0 17 3 1 #"x"
0 0 17 3 6 #" 2] [y"
0 0 17 3 1 #" "
0 0 17 3 7 #"3]) ( +"
0 0 17 3 7 #" x y)})"
0 0 24 29 1 #"\n"
0 0 17 3 99 9 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 9 #"parse 'x)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";(id 'x)"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;(parse '2)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";(num 2)"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;(interp"
0 0 17 3 2 #" ("
0 0 17 3 5 #"parse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 4 #"with"
0 0 17 3 3 #" (["
0 0 17 3 1 #"x"
0 0 17 3 2 #" 2"
0 0 17 3 4 #"] [y"
0 0 17 3 2 #" 1"
0 0 17 3 4 #"] [z"
0 0 17 3 1 #" "
0 0 17 3 6 #"3]) (+"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 16 #" y z)}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";6"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;(interp (parse "
0 0 17 3 12 #"'{with ([x 2"
0 0 17 3 4 #"] [y"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 4 #"] [z"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 4 #"]) ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 16 #" y z)}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 8          10 17 4 #"2/3\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;(interp ("
0 0 17 3 1 #"p"
0 0 17 3 1 #"a"
0 0 17 3 3 #"rse"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"{"
0 0 17 3 4 #"with"
0 0 17 3 3 #" (["
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #"] ["
0 0 17 3 2 #"y "
0 0 17 3 1 #"1"
0 0 17 3 3 #"] ["
0 0 17 3 1 #"z"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 4 #"]) ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 16 #" y z)}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";6"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;(interp (parse"
0 0 17 3 7 #" '{with"
0 0 17 3 4 #" ([x"
0 0 17 3 2 #" 2"
0 0 17 3 3 #"] ["
0 0 17 3 1 #"y"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 4 #"] [z"
0 0 17 3 7 #" 3]) (-"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 16 #" y z)}) (mtSub))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";-2"
0 0 24 29 1 #"\n"
0           0
